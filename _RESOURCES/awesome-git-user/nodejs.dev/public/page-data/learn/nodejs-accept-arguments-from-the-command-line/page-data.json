{
  "componentChunkName": "component---src-templates-learn-tsx",
  "path": "/learn/nodejs-accept-arguments-from-the-command-line",
  "result": {
    "data": {
      "doc": {
        "id": "49ebabc2-cf34-5128-9669-8d003d8bc94e",
        "html": "<p>You can pass any number of arguments when invoking a Node.js application using</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node app.js</code></pre></div>\n<p>Arguments can be standalone or have a key and a value.</p>\n<p>For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node app.js joe</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node app.js <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>joe</code></pre></div>\n<p>This changes how you will retrieve this value in the Node.js code.</p>\n<p>The way you retrieve it is using the <code class=\"language-text\">process</code> object built into Node.js.</p>\n<p>It exposes an <code class=\"language-text\">argv</code> property, which is an array that contains all the command line invocation arguments.</p>\n<p>The first element is the full path of the <code class=\"language-text\">node</code> command.</p>\n<p>The second element is the full path of the file being executed.</p>\n<p>All the additional arguments are present from the third position going forward.</p>\n<p>You can iterate over all the arguments (including the node path and the file path) using a loop:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>index<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>val<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You can get only the additional arguments by creating a new array that excludes the first 2 params:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>If you have one argument without an index name, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node app.js joe</code></pre></div>\n<p>you can access it using</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nargs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>In this case:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node app.js <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>joe</code></pre></div>\n<p><code class=\"language-text\">args[0]</code> is <code class=\"language-text\">name=joe</code>, and you need to\nparse it. The best way to do so is by using the <a href=\"https://www.npmjs.com/package/minimist\"><code class=\"language-text\">minimist</code></a> library, which helps dealing with arguments:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minimist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nargs<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//joe</span></code></pre></div>\n<p>This time you need to use double dashes before each argument name:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node app.js --name<span class=\"token operator\">=</span>joe</code></pre></div>",
        "tableOfContents": "",
        "frontmatter": {
          "title": "Node.js, accept arguments from the command line",
          "description": "How to accept arguments in a Node.js program passed from the command line"
        },
        "fields": {
          "slug": "nodejs-accept-arguments-from-the-command-line",
          "authors": [
            "flaviocopes",
            " ZYSzys",
            " MylesBorins",
            " fhemberger",
            " LaRuaNa",
            " ahmadawais"
          ]
        }
      }
    },
    "pageContext": {
      "slug": "nodejs-accept-arguments-from-the-command-line",
      "next": {
        "slug": "output-to-the-command-line-using-nodejs",
        "title": "Output to the command line using Node.js"
      },
      "previous": {
        "slug": "how-to-use-the-nodejs-repl",
        "title": "How to use the Node.js REPL"
      },
      "relativePath": "0012-node-cli-args/index.md",
      "navigationData": {
        "Quick Start": [
          {
            "title": "Introduction to Node.js",
            "slug": "introduction-to-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "A brief history of Node.js",
            "slug": "a-brief-history-of-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "How to install Node.js",
            "slug": "how-to-install-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "How much JavaScript do you need to know to use Node.js?",
            "slug": "how-much-javascript-do-you-need-to-know-to-use-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "Differences between Node.js and the Browser",
            "slug": "differences-between-nodejs-and-the-browser",
            "section": "Quick Start"
          }
        ],
        "Getting Started": [
          {
            "title": "The V8 JavaScript Engine",
            "slug": "the-v8-javascript-engine",
            "section": "Getting Started"
          },
          {
            "title": "Run Node.js scripts from the command line",
            "slug": "run-nodejs-scripts-from-the-command-line",
            "section": "Getting Started"
          },
          {
            "title": "How to exit from a Node.js program",
            "slug": "how-to-exit-from-a-nodejs-program",
            "section": "Getting Started"
          },
          {
            "title": "How to read environment variables from Node.js",
            "slug": "how-to-read-environment-variables-from-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "How to use the Node.js REPL",
            "slug": "how-to-use-the-nodejs-repl",
            "section": "Getting Started"
          },
          {
            "title": "Node.js, accept arguments from the command line",
            "slug": "nodejs-accept-arguments-from-the-command-line",
            "section": "Getting Started"
          },
          {
            "title": "Output to the command line using Node.js",
            "slug": "output-to-the-command-line-using-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Accept input from the command line in Node.js",
            "slug": "accept-input-from-the-command-line-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Expose functionality from a Node.js file using exports",
            "slug": "expose-functionality-from-a-nodejs-file-using-exports",
            "section": "Getting Started"
          },
          {
            "title": "An introduction to the npm package manager",
            "slug": "an-introduction-to-the-npm-package-manager",
            "section": "Getting Started"
          },
          {
            "title": "Where does npm install the packages?",
            "slug": "where-does-npm-install-the-packages",
            "section": "Getting Started"
          },
          {
            "title": "How to use or execute a package installed using npm",
            "slug": "how-to-use-or-execute-a-package-installed-using-npm",
            "section": "Getting Started"
          },
          {
            "title": "The package.json guide",
            "slug": "the-package-json-guide",
            "section": "Getting Started"
          },
          {
            "title": "The package-lock.json file",
            "slug": "the-package-lock-json-file",
            "section": "Getting Started"
          },
          {
            "title": "Find the installed version of an npm package",
            "slug": "find-the-installed-version-of-an-npm-package",
            "section": "Getting Started"
          },
          {
            "title": "Install an older version of an npm package",
            "slug": "install-an-older-version-of-an-npm-package",
            "section": "Getting Started"
          },
          {
            "title": "Update all the Node.js dependencies to their latest version",
            "slug": "update-all-the-nodejs-dependencies-to-their-latest-version",
            "section": "Getting Started"
          },
          {
            "title": "Semantic Versioning using npm",
            "slug": "semantic-versioning-using-npm",
            "section": "Getting Started"
          },
          {
            "title": "Uninstalling npm packages",
            "slug": "uninstalling-npm-packages",
            "section": "Getting Started"
          },
          {
            "title": "npm global or local packages",
            "slug": "npm-global-or-local-packages",
            "section": "Getting Started"
          },
          {
            "title": "npm dependencies and devDependencies",
            "slug": "npm-dependencies-and-devdependencies",
            "section": "Getting Started"
          },
          {
            "title": "The npx Node.js Package Runner",
            "slug": "the-npx-nodejs-package-runner",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js Event Loop",
            "slug": "the-nodejs-event-loop",
            "section": "Getting Started"
          },
          {
            "title": "Understanding process.nextTick()",
            "slug": "understanding-process-nexttick",
            "section": "Getting Started"
          },
          {
            "title": "Understanding setImmediate()",
            "slug": "understanding-setimmediate",
            "section": "Getting Started"
          },
          {
            "title": "Discover JavaScript Timers",
            "slug": "discover-javascript-timers",
            "section": "Getting Started"
          },
          {
            "title": "JavaScript Asynchronous Programming and Callbacks",
            "slug": "javascript-asynchronous-programming-and-callbacks",
            "section": "Getting Started"
          },
          {
            "title": "Understanding JavaScript Promises",
            "slug": "understanding-javascript-promises",
            "section": "Getting Started"
          },
          {
            "title": "Modern Asynchronous JavaScript with Async and Await",
            "slug": "modern-asynchronous-javascript-with-async-and-await",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js Event emitter",
            "slug": "the-nodejs-event-emitter",
            "section": "Getting Started"
          },
          {
            "title": "Build an HTTP Server",
            "slug": "build-an-http-server",
            "section": "Getting Started"
          },
          {
            "title": "Making HTTP requests with Node.js",
            "slug": "making-http-requests-with-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Make an HTTP POST request using Node.js",
            "slug": "make-an-http-post-request-using-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Get HTTP request body data using Node.js",
            "slug": "get-http-request-body-data-using-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Working with file descriptors in Node.js",
            "slug": "working-with-file-descriptors-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Node.js file stats",
            "slug": "nodejs-file-stats",
            "section": "Getting Started"
          },
          {
            "title": "Node.js File Paths",
            "slug": "nodejs-file-paths",
            "section": "Getting Started"
          },
          {
            "title": "Reading files with Node.js",
            "slug": "reading-files-with-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Writing files with Node.js",
            "slug": "writing-files-with-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Working with folders in Node.js",
            "slug": "working-with-folders-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js fs module",
            "slug": "the-nodejs-fs-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js path module",
            "slug": "the-nodejs-path-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js os module",
            "slug": "the-nodejs-os-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js events module",
            "slug": "the-nodejs-events-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js http module",
            "slug": "the-nodejs-http-module",
            "section": "Getting Started"
          },
          {
            "title": "Node.js Buffers",
            "slug": "nodejs-buffers",
            "section": "Getting Started"
          },
          {
            "title": "Node.js Streams",
            "slug": "nodejs-streams",
            "section": "Getting Started"
          },
          {
            "title": "Node.js, the difference between development and production",
            "slug": "nodejs-the-difference-between-development-and-production",
            "section": "Getting Started"
          },
          {
            "title": "Error handling in Node.js",
            "slug": "error-handling-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "How to log an object in Node.js",
            "slug": "how-to-log-an-object-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Node.js with TypeScript",
            "slug": "nodejs-with-typescript",
            "section": "Getting Started"
          }
        ]
      }
    }
  },
  "staticQueryHashes": []
}
