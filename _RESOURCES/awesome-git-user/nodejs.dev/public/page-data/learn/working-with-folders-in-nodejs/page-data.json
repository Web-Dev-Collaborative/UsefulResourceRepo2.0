{"componentChunkName":"component---src-templates-learn-tsx","path":"/learn/working-with-folders-in-nodejs","result":{"data":{"doc":{"id":"f6e82124-86b5-5826-bfd6-2e1686c08585","html":"<p>The Node.js <code class=\"language-text\">fs</code> core module provides many handy methods you can use to work with folders.</p>\n<h2 id=\"check-if-a-folder-exists\" style=\"position:relative;\"><a href=\"#check-if-a-folder-exists\" aria-label=\"check if a folder exists permalink\" class=\"autolink-headers before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Check if a folder exists</h2>\n<p>Use <code class=\"language-text\">fs.access()</code> to check if the folder exists and Node.js can access it with its permissions.</p>\n<h2 id=\"create-a-new-folder\" style=\"position:relative;\"><a href=\"#create-a-new-folder\" aria-label=\"create a new folder permalink\" class=\"autolink-headers before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a new folder</h2>\n<p>Use <code class=\"language-text\">fs.mkdir()</code> or <code class=\"language-text\">fs.mkdirSync()</code> to create a new folder.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> folderName <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/joe/test'</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>folderName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirSync</span><span class=\"token punctuation\">(</span>folderName<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"read-the-content-of-a-directory\" style=\"position:relative;\"><a href=\"#read-the-content-of-a-directory\" aria-label=\"read the content of a directory permalink\" class=\"autolink-headers before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Read the content of a directory</h2>\n<p>Use <code class=\"language-text\">fs.readdir()</code> or <code class=\"language-text\">fs.readdirSync()</code> to read the contents of a directory.</p>\n<p>This piece of code reads the content of a folder, both files and subfolders, and returns their relative path:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> folderPath <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/joe'</span>\n\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>folderPath<span class=\"token punctuation\">)</span></code></pre></div>\n<p>You can get the full path:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fs<span class=\"token punctuation\">.</span><span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>folderPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileName</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>folderPath<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You can also filter the results to only return the files, and exclude the folders:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isFile</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">fileName</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">lstatSync</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>folderPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileName</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>folderPath<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>isFile<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"rename-a-folder\" style=\"position:relative;\"><a href=\"#rename-a-folder\" aria-label=\"rename a folder permalink\" class=\"autolink-headers before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rename a folder</h2>\n<p>Use <code class=\"language-text\">fs.rename()</code> or <code class=\"language-text\">fs.renameSync()</code> to rename folder. The first parameter is the current path, the second the new path:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/joe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/Users/roger'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">//done</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">fs.renameSync()</code> is the synchronous version:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">renameSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/joe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/Users/roger'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"remove-a-folder\" style=\"position:relative;\"><a href=\"#remove-a-folder\" aria-label=\"remove a folder permalink\" class=\"autolink-headers before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remove a folder</h2>\n<p>Use <code class=\"language-text\">fs.rmdir()</code> or <code class=\"language-text\">fs.rmdirSync()</code> to remove a folder.</p>\n<p>Removing a folder that has content can be more complicated than you need.</p>\n<p>In this case it's best to install the <a href=\"https://www.npmjs.com/package/fs-extra\"><code class=\"language-text\">fs-extra</code></a> module, which is very popular and well maintained. It's a drop-in replacement of the <code class=\"language-text\">fs</code> module, which provides more features on top of it.</p>\n<p>In this case the <code class=\"language-text\">remove()</code> method is what you want.</p>\n<p>Install it using</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> fs-extra</code></pre></div>\n<p>and use it like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/joe'</span>\n\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>folder<span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>It can also be used with promises:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">fs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>folder<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//done</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>or with async/await:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">removeFolder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">folder</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>folder<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//done</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/joe'</span>\n<span class=\"token function\">removeFolder</span><span class=\"token punctuation\">(</span>folder<span class=\"token punctuation\">)</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"#check-if-a-folder-exists\">Check if a folder exists</a></li>\n<li><a href=\"#create-a-new-folder\">Create a new folder</a></li>\n<li><a href=\"#read-the-content-of-a-directory\">Read the content of a directory</a></li>\n<li><a href=\"#rename-a-folder\">Rename a folder</a></li>\n<li><a href=\"#remove-a-folder\">Remove a folder</a></li>\n</ul>","frontmatter":{"title":"Working with folders in Node.js","description":"How to interact with folders using Node.js"},"fields":{"slug":"working-with-folders-in-nodejs","authors":["flaviocopes"," MylesBorins"," fhemberger"," liangpeili"," LaRuaNa"," ahmadawais"]}}},"pageContext":{"slug":"working-with-folders-in-nodejs","next":{"slug":"the-nodejs-fs-module","title":"The Node.js fs module"},"previous":{"slug":"writing-files-with-nodejs","title":"Writing files with Node.js"},"relativePath":"0045-node-folders/index.md","navigationData":{"Quick Start":[{"title":"Introduction to Node.js","slug":"introduction-to-nodejs","section":"Quick Start"},{"title":"A brief history of Node.js","slug":"a-brief-history-of-nodejs","section":"Quick Start"},{"title":"How to install Node.js","slug":"how-to-install-nodejs","section":"Quick Start"},{"title":"How much JavaScript do you need to know to use Node.js?","slug":"how-much-javascript-do-you-need-to-know-to-use-nodejs","section":"Quick Start"},{"title":"Differences between Node.js and the Browser","slug":"differences-between-nodejs-and-the-browser","section":"Quick Start"}],"Getting Started":[{"title":"The V8 JavaScript Engine","slug":"the-v8-javascript-engine","section":"Getting Started"},{"title":"Run Node.js scripts from the command line","slug":"run-nodejs-scripts-from-the-command-line","section":"Getting Started"},{"title":"How to exit from a Node.js program","slug":"how-to-exit-from-a-nodejs-program","section":"Getting Started"},{"title":"How to read environment variables from Node.js","slug":"how-to-read-environment-variables-from-nodejs","section":"Getting Started"},{"title":"How to use the Node.js REPL","slug":"how-to-use-the-nodejs-repl","section":"Getting Started"},{"title":"Node.js, accept arguments from the command line","slug":"nodejs-accept-arguments-from-the-command-line","section":"Getting Started"},{"title":"Output to the command line using Node.js","slug":"output-to-the-command-line-using-nodejs","section":"Getting Started"},{"title":"Accept input from the command line in Node.js","slug":"accept-input-from-the-command-line-in-nodejs","section":"Getting Started"},{"title":"Expose functionality from a Node.js file using exports","slug":"expose-functionality-from-a-nodejs-file-using-exports","section":"Getting Started"},{"title":"An introduction to the npm package manager","slug":"an-introduction-to-the-npm-package-manager","section":"Getting Started"},{"title":"Where does npm install the packages?","slug":"where-does-npm-install-the-packages","section":"Getting Started"},{"title":"How to use or execute a package installed using npm","slug":"how-to-use-or-execute-a-package-installed-using-npm","section":"Getting Started"},{"title":"The package.json guide","slug":"the-package-json-guide","section":"Getting Started"},{"title":"The package-lock.json file","slug":"the-package-lock-json-file","section":"Getting Started"},{"title":"Find the installed version of an npm package","slug":"find-the-installed-version-of-an-npm-package","section":"Getting Started"},{"title":"Install an older version of an npm package","slug":"install-an-older-version-of-an-npm-package","section":"Getting Started"},{"title":"Update all the Node.js dependencies to their latest version","slug":"update-all-the-nodejs-dependencies-to-their-latest-version","section":"Getting Started"},{"title":"Semantic Versioning using npm","slug":"semantic-versioning-using-npm","section":"Getting Started"},{"title":"Uninstalling npm packages","slug":"uninstalling-npm-packages","section":"Getting Started"},{"title":"npm global or local packages","slug":"npm-global-or-local-packages","section":"Getting Started"},{"title":"npm dependencies and devDependencies","slug":"npm-dependencies-and-devdependencies","section":"Getting Started"},{"title":"The npx Node.js Package Runner","slug":"the-npx-nodejs-package-runner","section":"Getting Started"},{"title":"The Node.js Event Loop","slug":"the-nodejs-event-loop","section":"Getting Started"},{"title":"Understanding process.nextTick()","slug":"understanding-process-nexttick","section":"Getting Started"},{"title":"Understanding setImmediate()","slug":"understanding-setimmediate","section":"Getting Started"},{"title":"Discover JavaScript Timers","slug":"discover-javascript-timers","section":"Getting Started"},{"title":"JavaScript Asynchronous Programming and Callbacks","slug":"javascript-asynchronous-programming-and-callbacks","section":"Getting Started"},{"title":"Understanding JavaScript Promises","slug":"understanding-javascript-promises","section":"Getting Started"},{"title":"Modern Asynchronous JavaScript with Async and Await","slug":"modern-asynchronous-javascript-with-async-and-await","section":"Getting Started"},{"title":"The Node.js Event emitter","slug":"the-nodejs-event-emitter","section":"Getting Started"},{"title":"Build an HTTP Server","slug":"build-an-http-server","section":"Getting Started"},{"title":"Making HTTP requests with Node.js","slug":"making-http-requests-with-nodejs","section":"Getting Started"},{"title":"Make an HTTP POST request using Node.js","slug":"make-an-http-post-request-using-nodejs","section":"Getting Started"},{"title":"Get HTTP request body data using Node.js","slug":"get-http-request-body-data-using-nodejs","section":"Getting Started"},{"title":"Working with file descriptors in Node.js","slug":"working-with-file-descriptors-in-nodejs","section":"Getting Started"},{"title":"Node.js file stats","slug":"nodejs-file-stats","section":"Getting Started"},{"title":"Node.js File Paths","slug":"nodejs-file-paths","section":"Getting Started"},{"title":"Reading files with Node.js","slug":"reading-files-with-nodejs","section":"Getting Started"},{"title":"Writing files with Node.js","slug":"writing-files-with-nodejs","section":"Getting Started"},{"title":"Working with folders in Node.js","slug":"working-with-folders-in-nodejs","section":"Getting Started"},{"title":"The Node.js fs module","slug":"the-nodejs-fs-module","section":"Getting Started"},{"title":"The Node.js path module","slug":"the-nodejs-path-module","section":"Getting Started"},{"title":"The Node.js os module","slug":"the-nodejs-os-module","section":"Getting Started"},{"title":"The Node.js events module","slug":"the-nodejs-events-module","section":"Getting Started"},{"title":"The Node.js http module","slug":"the-nodejs-http-module","section":"Getting Started"},{"title":"Node.js Buffers","slug":"nodejs-buffers","section":"Getting Started"},{"title":"Node.js Streams","slug":"nodejs-streams","section":"Getting Started"},{"title":"Node.js, the difference between development and production","slug":"nodejs-the-difference-between-development-and-production","section":"Getting Started"},{"title":"Error handling in Node.js","slug":"error-handling-in-nodejs","section":"Getting Started"},{"title":"How to log an object in Node.js","slug":"how-to-log-an-object-in-nodejs","section":"Getting Started"},{"title":"Node.js with TypeScript","slug":"nodejs-with-typescript","section":"Getting Started"}]}}},"staticQueryHashes":[]}