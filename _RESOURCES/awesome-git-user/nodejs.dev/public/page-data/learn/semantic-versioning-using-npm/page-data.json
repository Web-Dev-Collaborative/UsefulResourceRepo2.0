{
  "componentChunkName": "component---src-templates-learn-tsx",
  "path": "/learn/semantic-versioning-using-npm",
  "result": {
    "data": {
      "doc": {
        "id": "c2529fe4-e458-5c15-a5f8-607253f6e088",
        "html": "<p>If there's one great thing in Node.js packages, it's that they all agreed on using Semantic Versioning for their version numbering.</p>\n<p>The Semantic Versioning concept is simple: all versions have 3 digits: <code class=\"language-text\">x.y.z</code>.</p>\n<ul>\n<li>the first digit is the major version</li>\n<li>the second digit is the minor version</li>\n<li>the third digit is the patch version</li>\n</ul>\n<p>When you make a new release, you don't just up a number as you please, but you have rules:</p>\n<ul>\n<li>you up the major version when you make incompatible API changes</li>\n<li>you up the minor version when you add functionality in a backward-compatible manner</li>\n<li>you up the patch version when you make backward-compatible bug fixes</li>\n</ul>\n<p>The convention is adopted all across programming languages, and it is very important that every <code class=\"language-text\">npm</code> package adheres to it, because the whole system depends on that.</p>\n<p>Why is that so important?</p>\n<p>Because <code class=\"language-text\">npm</code> set some rules we can use in the <code class=\"language-text\">package.json</code> file to choose which versions it can update our packages to, when we run <code class=\"language-text\">npm update</code>.</p>\n<p>The rules use those symbols:</p>\n<ul>\n<li><code class=\"language-text\">^</code></li>\n<li><code class=\"language-text\">~</code></li>\n<li><code class=\"language-text\">&gt;</code></li>\n<li><code class=\"language-text\">&gt;=</code></li>\n<li><code class=\"language-text\">&lt;</code></li>\n<li><code class=\"language-text\">&lt;=</code></li>\n<li><code class=\"language-text\">=</code></li>\n<li><code class=\"language-text\">-</code></li>\n<li><code class=\"language-text\">||</code></li>\n</ul>\n<p>Let's see those rules in detail:</p>\n<ul>\n<li><code class=\"language-text\">^</code>:  It will only do updates that do not change the leftmost non-zero number. If you write <code class=\"language-text\">^0.13.0</code>, when running <code class=\"language-text\">npm update</code>, it can update to <code class=\"language-text\">0.13.1</code>, <code class=\"language-text\">0.13.2</code>, and so on, but not to <code class=\"language-text\">0.14.0</code> or above. If you write <code class=\"language-text\">^1.13.0</code>, when running <code class=\"language-text\">npm update</code>, it can update to <code class=\"language-text\">1.13.1</code>, <code class=\"language-text\">1.14.0</code> and so on, but will not update to <code class=\"language-text\">2.0.0</code> or above.</li>\n<li><code class=\"language-text\">~</code>: if you write <code class=\"language-text\">~0.13.0</code>, when running <code class=\"language-text\">npm update</code> it can update to patch releases: <code class=\"language-text\">0.13.1</code> is ok, but <code class=\"language-text\">0.14.0</code> is not.</li>\n<li><code class=\"language-text\">&gt;</code>: you accept any version higher than the one you specify</li>\n<li><code class=\"language-text\">&gt;=</code>: you accept any version equal to or higher than the one you specify</li>\n<li><code class=\"language-text\">&lt;=</code>: you accept any version equal or lower to the one you specify</li>\n<li><code class=\"language-text\">&lt;</code>: you accept any version lower to the one you specify</li>\n<li><code class=\"language-text\">=</code>: you accept that exact version</li>\n<li><code class=\"language-text\">-</code>: you accept a range of versions. Example: <code class=\"language-text\">2.1.0 - 2.6.2</code></li>\n<li><code class=\"language-text\">||</code>: you combine sets. Example: <code class=\"language-text\">&lt; 2.1 || &gt; 2.6</code></li>\n</ul>\n<p>You can combine some of those notations, for example use <code class=\"language-text\">1.0.0 || &gt;=1.1.0 &lt;1.2.0</code> to either use 1.0.0 or one release from 1.1.0 up, but lower than 1.2.0.</p>\n<p>There are other rules, too:</p>\n<ul>\n<li>no symbol: you accept only that specific version you specify (<code class=\"language-text\">1.2.1</code>)</li>\n<li><code class=\"language-text\">latest</code>: you want to use the latest version available</li>\n</ul>",
        "tableOfContents": "",
        "frontmatter": {
          "title": "Semantic Versioning using npm",
          "description": "Semantic Versioning is a convention used to provide a meaning to versions"
        },
        "fields": {
          "slug": "semantic-versioning-using-npm",
          "authors": ["flaviocopes", " MylesBorins", " LaRuaNa", " ahmadawais"]
        }
      }
    },
    "pageContext": {
      "slug": "semantic-versioning-using-npm",
      "next": {
        "slug": "uninstalling-npm-packages",
        "title": "Uninstalling npm packages"
      },
      "previous": {
        "slug": "update-all-the-nodejs-dependencies-to-their-latest-version",
        "title": "Update all the Node.js dependencies to their latest version"
      },
      "relativePath": "0024-npm-semantic-versioning/index.md",
      "navigationData": {
        "Quick Start": [
          {
            "title": "Introduction to Node.js",
            "slug": "introduction-to-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "A brief history of Node.js",
            "slug": "a-brief-history-of-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "How to install Node.js",
            "slug": "how-to-install-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "How much JavaScript do you need to know to use Node.js?",
            "slug": "how-much-javascript-do-you-need-to-know-to-use-nodejs",
            "section": "Quick Start"
          },
          {
            "title": "Differences between Node.js and the Browser",
            "slug": "differences-between-nodejs-and-the-browser",
            "section": "Quick Start"
          }
        ],
        "Getting Started": [
          {
            "title": "The V8 JavaScript Engine",
            "slug": "the-v8-javascript-engine",
            "section": "Getting Started"
          },
          {
            "title": "Run Node.js scripts from the command line",
            "slug": "run-nodejs-scripts-from-the-command-line",
            "section": "Getting Started"
          },
          {
            "title": "How to exit from a Node.js program",
            "slug": "how-to-exit-from-a-nodejs-program",
            "section": "Getting Started"
          },
          {
            "title": "How to read environment variables from Node.js",
            "slug": "how-to-read-environment-variables-from-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "How to use the Node.js REPL",
            "slug": "how-to-use-the-nodejs-repl",
            "section": "Getting Started"
          },
          {
            "title": "Node.js, accept arguments from the command line",
            "slug": "nodejs-accept-arguments-from-the-command-line",
            "section": "Getting Started"
          },
          {
            "title": "Output to the command line using Node.js",
            "slug": "output-to-the-command-line-using-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Accept input from the command line in Node.js",
            "slug": "accept-input-from-the-command-line-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Expose functionality from a Node.js file using exports",
            "slug": "expose-functionality-from-a-nodejs-file-using-exports",
            "section": "Getting Started"
          },
          {
            "title": "An introduction to the npm package manager",
            "slug": "an-introduction-to-the-npm-package-manager",
            "section": "Getting Started"
          },
          {
            "title": "Where does npm install the packages?",
            "slug": "where-does-npm-install-the-packages",
            "section": "Getting Started"
          },
          {
            "title": "How to use or execute a package installed using npm",
            "slug": "how-to-use-or-execute-a-package-installed-using-npm",
            "section": "Getting Started"
          },
          {
            "title": "The package.json guide",
            "slug": "the-package-json-guide",
            "section": "Getting Started"
          },
          {
            "title": "The package-lock.json file",
            "slug": "the-package-lock-json-file",
            "section": "Getting Started"
          },
          {
            "title": "Find the installed version of an npm package",
            "slug": "find-the-installed-version-of-an-npm-package",
            "section": "Getting Started"
          },
          {
            "title": "Install an older version of an npm package",
            "slug": "install-an-older-version-of-an-npm-package",
            "section": "Getting Started"
          },
          {
            "title": "Update all the Node.js dependencies to their latest version",
            "slug": "update-all-the-nodejs-dependencies-to-their-latest-version",
            "section": "Getting Started"
          },
          {
            "title": "Semantic Versioning using npm",
            "slug": "semantic-versioning-using-npm",
            "section": "Getting Started"
          },
          {
            "title": "Uninstalling npm packages",
            "slug": "uninstalling-npm-packages",
            "section": "Getting Started"
          },
          {
            "title": "npm global or local packages",
            "slug": "npm-global-or-local-packages",
            "section": "Getting Started"
          },
          {
            "title": "npm dependencies and devDependencies",
            "slug": "npm-dependencies-and-devdependencies",
            "section": "Getting Started"
          },
          {
            "title": "The npx Node.js Package Runner",
            "slug": "the-npx-nodejs-package-runner",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js Event Loop",
            "slug": "the-nodejs-event-loop",
            "section": "Getting Started"
          },
          {
            "title": "Understanding process.nextTick()",
            "slug": "understanding-process-nexttick",
            "section": "Getting Started"
          },
          {
            "title": "Understanding setImmediate()",
            "slug": "understanding-setimmediate",
            "section": "Getting Started"
          },
          {
            "title": "Discover JavaScript Timers",
            "slug": "discover-javascript-timers",
            "section": "Getting Started"
          },
          {
            "title": "JavaScript Asynchronous Programming and Callbacks",
            "slug": "javascript-asynchronous-programming-and-callbacks",
            "section": "Getting Started"
          },
          {
            "title": "Understanding JavaScript Promises",
            "slug": "understanding-javascript-promises",
            "section": "Getting Started"
          },
          {
            "title": "Modern Asynchronous JavaScript with Async and Await",
            "slug": "modern-asynchronous-javascript-with-async-and-await",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js Event emitter",
            "slug": "the-nodejs-event-emitter",
            "section": "Getting Started"
          },
          {
            "title": "Build an HTTP Server",
            "slug": "build-an-http-server",
            "section": "Getting Started"
          },
          {
            "title": "Making HTTP requests with Node.js",
            "slug": "making-http-requests-with-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Make an HTTP POST request using Node.js",
            "slug": "make-an-http-post-request-using-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Get HTTP request body data using Node.js",
            "slug": "get-http-request-body-data-using-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Working with file descriptors in Node.js",
            "slug": "working-with-file-descriptors-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Node.js file stats",
            "slug": "nodejs-file-stats",
            "section": "Getting Started"
          },
          {
            "title": "Node.js File Paths",
            "slug": "nodejs-file-paths",
            "section": "Getting Started"
          },
          {
            "title": "Reading files with Node.js",
            "slug": "reading-files-with-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Writing files with Node.js",
            "slug": "writing-files-with-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Working with folders in Node.js",
            "slug": "working-with-folders-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js fs module",
            "slug": "the-nodejs-fs-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js path module",
            "slug": "the-nodejs-path-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js os module",
            "slug": "the-nodejs-os-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js events module",
            "slug": "the-nodejs-events-module",
            "section": "Getting Started"
          },
          {
            "title": "The Node.js http module",
            "slug": "the-nodejs-http-module",
            "section": "Getting Started"
          },
          {
            "title": "Node.js Buffers",
            "slug": "nodejs-buffers",
            "section": "Getting Started"
          },
          {
            "title": "Node.js Streams",
            "slug": "nodejs-streams",
            "section": "Getting Started"
          },
          {
            "title": "Node.js, the difference between development and production",
            "slug": "nodejs-the-difference-between-development-and-production",
            "section": "Getting Started"
          },
          {
            "title": "Error handling in Node.js",
            "slug": "error-handling-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "How to log an object in Node.js",
            "slug": "how-to-log-an-object-in-nodejs",
            "section": "Getting Started"
          },
          {
            "title": "Node.js with TypeScript",
            "slug": "nodejs-with-typescript",
            "section": "Getting Started"
          }
        ]
      }
    }
  },
  "staticQueryHashes": []
}
