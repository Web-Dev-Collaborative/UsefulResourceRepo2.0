{"componentChunkName":"component---src-templates-learn-tsx","path":"/learn/accept-input-from-the-command-line-in-nodejs","result":{"data":{"doc":{"id":"010b5047-e1ce-5d42-b94e-0fb511adc620","html":"<p>How to make a Node.js CLI program interactive?</p>\n<p>Node.js since version 7 provides the <a href=\"https://nodejs.org/api/readline.html\"><code class=\"language-text\">readline</code> module</a> to perform exactly this: get input from a readable stream such as the <code class=\"language-text\">process.stdin</code> stream, which during the execution of a Node.js program is the terminal input, one line at a time.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> readline <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readline'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  input<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdout\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nreadline<span class=\"token punctuation\">.</span><span class=\"token function\">question</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">What's your name?</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  readline<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This piece of code asks the username, and once the text is entered and the user presses enter, we send a greeting.</p>\n<p>The <code class=\"language-text\">question()</code> method shows the first parameter (a question) and waits for the user input. It calls the callback function once enter is pressed.</p>\n<p>In this callback function, we close the readline interface.</p>\n<p><code class=\"language-text\">readline</code> offers several other methods, and I'll let you check them out on the package documentation linked above.</p>\n<p>If you need to require a password, it's best not to echo it back, but instead show a <code class=\"language-text\">*</code> symbol.</p>\n<p>The simplest way is to use the <a href=\"https://www.npmjs.com/package/readline-sync\"><code class=\"language-text\">readline-sync</code> package</a> which is very similar in terms of the API and handles this out of the box.</p>\n<p>A more complete and abstract solution is provided by the <a href=\"https://github.com/SBoudrias/Inquirer.js\">Inquirer.js package</a>.</p>\n<p>You can install it using <code class=\"language-text\">npm install inquirer</code>, and then you can replicate the above code like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> inquirer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inquirer'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> questions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"What's your name?\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\ninquirer<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>questions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">answers</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>answers<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Inquirer.js lets you do many things like asking multiple choices, having radio buttons, confirmations, and more.</p>\n<p>It's worth knowing all the alternatives, especially the built-in ones provided by Node.js, but if you plan to take CLI input to the next level, Inquirer.js is an optimal choice.</p>","tableOfContents":"","frontmatter":{"title":"Accept input from the command line in Node.js","description":"How to make a Node.js CLI program interactive using the built-in readline Node.js module"},"fields":{"slug":"accept-input-from-the-command-line-in-nodejs","authors":["flaviocopes"," MylesBorins"," fhemberger"," LaRuaNa"," ahmadawais"]}}},"pageContext":{"slug":"accept-input-from-the-command-line-in-nodejs","next":{"slug":"expose-functionality-from-a-nodejs-file-using-exports","title":"Expose functionality from a Node.js file using exports"},"previous":{"slug":"output-to-the-command-line-using-nodejs","title":"Output to the command line using Node.js"},"relativePath":"0014-node-input-from-cli/index.md","navigationData":{"Quick Start":[{"title":"Introduction to Node.js","slug":"introduction-to-nodejs","section":"Quick Start"},{"title":"A brief history of Node.js","slug":"a-brief-history-of-nodejs","section":"Quick Start"},{"title":"How to install Node.js","slug":"how-to-install-nodejs","section":"Quick Start"},{"title":"How much JavaScript do you need to know to use Node.js?","slug":"how-much-javascript-do-you-need-to-know-to-use-nodejs","section":"Quick Start"},{"title":"Differences between Node.js and the Browser","slug":"differences-between-nodejs-and-the-browser","section":"Quick Start"}],"Getting Started":[{"title":"The V8 JavaScript Engine","slug":"the-v8-javascript-engine","section":"Getting Started"},{"title":"Run Node.js scripts from the command line","slug":"run-nodejs-scripts-from-the-command-line","section":"Getting Started"},{"title":"How to exit from a Node.js program","slug":"how-to-exit-from-a-nodejs-program","section":"Getting Started"},{"title":"How to read environment variables from Node.js","slug":"how-to-read-environment-variables-from-nodejs","section":"Getting Started"},{"title":"How to use the Node.js REPL","slug":"how-to-use-the-nodejs-repl","section":"Getting Started"},{"title":"Node.js, accept arguments from the command line","slug":"nodejs-accept-arguments-from-the-command-line","section":"Getting Started"},{"title":"Output to the command line using Node.js","slug":"output-to-the-command-line-using-nodejs","section":"Getting Started"},{"title":"Accept input from the command line in Node.js","slug":"accept-input-from-the-command-line-in-nodejs","section":"Getting Started"},{"title":"Expose functionality from a Node.js file using exports","slug":"expose-functionality-from-a-nodejs-file-using-exports","section":"Getting Started"},{"title":"An introduction to the npm package manager","slug":"an-introduction-to-the-npm-package-manager","section":"Getting Started"},{"title":"Where does npm install the packages?","slug":"where-does-npm-install-the-packages","section":"Getting Started"},{"title":"How to use or execute a package installed using npm","slug":"how-to-use-or-execute-a-package-installed-using-npm","section":"Getting Started"},{"title":"The package.json guide","slug":"the-package-json-guide","section":"Getting Started"},{"title":"The package-lock.json file","slug":"the-package-lock-json-file","section":"Getting Started"},{"title":"Find the installed version of an npm package","slug":"find-the-installed-version-of-an-npm-package","section":"Getting Started"},{"title":"Install an older version of an npm package","slug":"install-an-older-version-of-an-npm-package","section":"Getting Started"},{"title":"Update all the Node.js dependencies to their latest version","slug":"update-all-the-nodejs-dependencies-to-their-latest-version","section":"Getting Started"},{"title":"Semantic Versioning using npm","slug":"semantic-versioning-using-npm","section":"Getting Started"},{"title":"Uninstalling npm packages","slug":"uninstalling-npm-packages","section":"Getting Started"},{"title":"npm global or local packages","slug":"npm-global-or-local-packages","section":"Getting Started"},{"title":"npm dependencies and devDependencies","slug":"npm-dependencies-and-devdependencies","section":"Getting Started"},{"title":"The npx Node.js Package Runner","slug":"the-npx-nodejs-package-runner","section":"Getting Started"},{"title":"The Node.js Event Loop","slug":"the-nodejs-event-loop","section":"Getting Started"},{"title":"Understanding process.nextTick()","slug":"understanding-process-nexttick","section":"Getting Started"},{"title":"Understanding setImmediate()","slug":"understanding-setimmediate","section":"Getting Started"},{"title":"Discover JavaScript Timers","slug":"discover-javascript-timers","section":"Getting Started"},{"title":"JavaScript Asynchronous Programming and Callbacks","slug":"javascript-asynchronous-programming-and-callbacks","section":"Getting Started"},{"title":"Understanding JavaScript Promises","slug":"understanding-javascript-promises","section":"Getting Started"},{"title":"Modern Asynchronous JavaScript with Async and Await","slug":"modern-asynchronous-javascript-with-async-and-await","section":"Getting Started"},{"title":"The Node.js Event emitter","slug":"the-nodejs-event-emitter","section":"Getting Started"},{"title":"Build an HTTP Server","slug":"build-an-http-server","section":"Getting Started"},{"title":"Making HTTP requests with Node.js","slug":"making-http-requests-with-nodejs","section":"Getting Started"},{"title":"Make an HTTP POST request using Node.js","slug":"make-an-http-post-request-using-nodejs","section":"Getting Started"},{"title":"Get HTTP request body data using Node.js","slug":"get-http-request-body-data-using-nodejs","section":"Getting Started"},{"title":"Working with file descriptors in Node.js","slug":"working-with-file-descriptors-in-nodejs","section":"Getting Started"},{"title":"Node.js file stats","slug":"nodejs-file-stats","section":"Getting Started"},{"title":"Node.js File Paths","slug":"nodejs-file-paths","section":"Getting Started"},{"title":"Reading files with Node.js","slug":"reading-files-with-nodejs","section":"Getting Started"},{"title":"Writing files with Node.js","slug":"writing-files-with-nodejs","section":"Getting Started"},{"title":"Working with folders in Node.js","slug":"working-with-folders-in-nodejs","section":"Getting Started"},{"title":"The Node.js fs module","slug":"the-nodejs-fs-module","section":"Getting Started"},{"title":"The Node.js path module","slug":"the-nodejs-path-module","section":"Getting Started"},{"title":"The Node.js os module","slug":"the-nodejs-os-module","section":"Getting Started"},{"title":"The Node.js events module","slug":"the-nodejs-events-module","section":"Getting Started"},{"title":"The Node.js http module","slug":"the-nodejs-http-module","section":"Getting Started"},{"title":"Node.js Buffers","slug":"nodejs-buffers","section":"Getting Started"},{"title":"Node.js Streams","slug":"nodejs-streams","section":"Getting Started"},{"title":"Node.js, the difference between development and production","slug":"nodejs-the-difference-between-development-and-production","section":"Getting Started"},{"title":"Error handling in Node.js","slug":"error-handling-in-nodejs","section":"Getting Started"},{"title":"How to log an object in Node.js","slug":"how-to-log-an-object-in-nodejs","section":"Getting Started"},{"title":"Node.js with TypeScript","slug":"nodejs-with-typescript","section":"Getting Started"}]}}},"staticQueryHashes":[]}