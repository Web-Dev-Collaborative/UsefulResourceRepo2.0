const char *
file_type(...)
PREINIT:
  char *filename = NULL;     // variables for named params
  char *default_type = NULL;
  IV read_file = 0;
  IV x;                      // loop counter
CODE:
  // check that there are an even number of args
  if (items % 2) croak("Usage: Gnome::MIME::file_type(k => v, ...)");
  
  // loop over args by pairs and fill in parameters
  for(x = 0; x < items; x+=2) {
    char *key = SvPV(ST(x), PL_na);
    if (strEQ(key, "filename")) {
      filename = SvPV(ST(x+1), PL_na);
    } else if (strEQ(key, "default_type")) {
      default_type = SvPV(ST(x+1), PL_na);
    } else if (strEQ(key, "read_file")) {
      read_file = SvIV(ST(x+1));
    } else {
      croak("Unknown key found in Gnome::MIME::file_type parameter list: %s",
	    SvPV(ST(x), PL_na));
    }
  }

  // make sure we have a filename parameter
  if (filename == NULL) croak("Missing required parameter filename.");

  // call the appropriate function based on arguments
  if (read_file && default_type != NULL) {
    RETVAL = gnome_mime_type_or_default_of_file(filename, default_type);
  } else if (read_file) {
    RETVAL = gnome_mime_type_of_file(filename);
  } else if (default_type != NULL) {
    RETVAL = gnome_mime_type_or_default(filename, default_type);
  } else {
    RETVAL = gnome_mime_type(filename);
  }
OUTPUT:
  RETVAL
