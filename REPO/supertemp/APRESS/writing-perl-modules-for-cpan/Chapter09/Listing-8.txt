void
type_data(type)
  const gchar * type
PREINIT:
  GList *keys, *iter;
  HV *hv;
  SV *value;
  char *key;          
PPCODE:
  // initialize hash
  hv = newHV();

  // get GList of keys for this type
  keys = gnome_mime_get_keys(type);

  // iterate through keys
  for (iter = keys; iter; iter = iter->next) {
    // get the key from the iterator
    key = iter->data;

    // create a new SV and load it with the value for this key
    value = newSVpv(gnome_mime_get_value(type, key), 0);
    
    // store the key/value pair in 
    hv_store(hv, key, strlen(key), value, 0);
  }

  // free keys GList
  g_list_free(keys);

  // test context with GIMME_V
  if (GIMME_V == G_ARRAY) {
    // list context - return a list of key/value pairs
    IV count = hv_iterinit(hv);
    IV i;
    I32 len;

    // loop over key/value pairs
    for (i = 1; i <= count; i++) {
      value = hv_iternextsv(hv, &key, &len);

      // push key and value
      XPUSHs(sv_2mortal(newSVpvn(key, len)));
      XPUSHs(sv_mortalcopy(value));
    }

    // free hv explicitely
    SvREFCNT_dec((SV *)hv);

    // return two SVs for each key in the hash
    XSRETURN(count * 2);
  }

  // G_SCALAR or G_VOID context - return a reference to the new hash
  XPUSHs(sv_2mortal(newRV_noinc((SV *)hv)));
